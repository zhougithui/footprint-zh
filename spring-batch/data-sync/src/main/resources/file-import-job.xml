<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch.xsd">
    <!--
        job中负责数据读取操作
    -->
    <bean id="productReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <!--
          输入文件
        -->
        <property name="resource" value="classpath:product.csv" />
        <!--
        <property name="strict" value="false"/>-->
        <!--
          跳过行
        -->
        <property name="linesToSkip" value="1" />
        <!--
          将行映射为一个对象
        -->
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!--
                  拆分规则
                -->
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="id,name,description,quantity" />
                    </bean>
                </property>
                <!--
                  从拆分后的字段中构建一个对象
                -->
                <property name="fieldSetMapper">
                    <bean class="com.lanmao.data.sync.csv.ProductFieldSetMapper" />
                </property>
            </bean>
        </property>
    </bean>

    <bean id="productProcessor" class="com.lanmao.data.sync.csv.ProductItemProcessor" />

    <bean id="productCompositeProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
        <property name="delegates">
            <list>
                <ref bean="productProcessor" />
            </list>
        </property>
    </bean>

    <bean id="productWriter" class="com.lanmao.data.sync.csv.ProductItemWriter" />

    <bean id="archiveFileTasklet" class="com.lanmao.data.sync.csv.ArchiveProductImportFileTasklet" scope="step">
        <property name="inputFile" value="product.csv" />
    </bean>

    <bean id="simpleJobExecutionListener" class="com.lanmao.data.sync.listener.SimpleJobExecutionListener"/>
    <bean id="simpleStepExecutionListener" class="com.lanmao.data.sync.listener.SimpleStepExecutionListener"/>
    <bean id="simpleChunkListener" class="com.lanmao.data.sync.listener.SimpleChunkListener"/>
    <bean id="simpleItemReadListener" class="com.lanmao.data.sync.listener.SimpleItemReadListener"/>
    <bean id="simpleItemProcessListener" class="com.lanmao.data.sync.listener.SimpleItemProcessListener"/>
    <bean id="simpleItemWriteListener" class="com.lanmao.data.sync.listener.SimpleItemWriteListener"/>
    <bean id="simpleSkipListener" class="com.lanmao.data.sync.listener.SimpleSkipListener"/>

    <bean id="simpleIncrementer" class="com.lanmao.data.sync.csv.SimpleIncrementer"/>

    <job id="simpleFileImportJob" restartable="true" incrementer="simpleIncrementer" xmlns="http://www.springframework.org/schema/batch">
        <step allow-start-if-complete="true" id="importFileStep" next="archiveFileStep">
            <tasklet>
                <!--
                    每个5秒钟执行一次writer
                -->
                <chunk reader="productReader"
                       processor="productCompositeProcessor"
                       writer="productWriter"
                       commit-interval="5"
                       skip-limit="10"
                       retry-limit="3"
                >
                    <batch:listeners>
                        <batch:listener ref="simpleChunkListener"/>
                        <batch:listener ref="simpleItemReadListener"/>
                        <batch:listener ref="simpleItemProcessListener"/>
                        <batch:listener ref="simpleItemWriteListener"/>
                        <batch:listener ref="simpleSkipListener"/>
                    </batch:listeners>
                    <!--
                        在这种情况下, 在处理某条记录时如果抛出 FlatFileParseException 异常,
                        则这条记录将被跳过。 如果超过10次 skip, 那么job 失败
                    -->
                    <skippable-exception-classes>
                        <include class="org.springframework.batch.item.file.FlatFileParseException"/>
                    </skippable-exception-classes>
                    <!--
                        什么样的异常会重试
                    -->
                    <retryable-exception-classes>
                        <include class="java.lang.RuntimeException"/>
                    </retryable-exception-classes>
                </chunk>
                <batch:listeners>
                    <batch:listener ref="simpleStepExecutionListener"/>
                </batch:listeners>
            </tasklet>
        </step>

        <step allow-start-if-complete="true" id="archiveFileStep">
            <tasklet ref="archiveFileTasklet" />
        </step>
        <batch:listeners>
            <batch:listener ref="simpleJobExecutionListener"/>
        </batch:listeners>
    </job>
</beans>