<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmao.data.sync.dao.oracle.PaymentCheckAccountEntityMapper">
  <resultMap id="BaseResultMap" type="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntity">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="MERCHANT_NO" jdbcType="VARCHAR" property="merchantNo" />
    <result column="SETTLE_DATE" jdbcType="TIMESTAMP" property="settleDate" />
    <result column="PAY_CHANNEL" jdbcType="VARCHAR" property="payChannel" />
    <result column="SUBJECT_NO" jdbcType="VARCHAR" property="subjectNo" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="INITIATOR" jdbcType="VARCHAR" property="initiator" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, MERCHANT_NO, SETTLE_DATE, PAY_CHANNEL, SUBJECT_NO, MODIFY_TIME, INITIATOR, STATUS
  </sql>
  <select id="selectByExample" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntityExample">
    delete from LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntity" useGeneratedKeys="false">
    insert into LM_PAY.T_PAYMENT_CHECK_ACCOUNT (ID, MERCHANT_NO, SETTLE_DATE,
      PAY_CHANNEL, SUBJECT_NO, MODIFY_TIME,
    INITIATOR, STATUS)
    values (#{id,jdbcType=NUMERIC}, #{merchantNo,jdbcType=VARCHAR}, #{settleDate,jdbcType=TIMESTAMP},
    #{payChannel,jdbcType=VARCHAR}, #{subjectNo,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{initiator,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntity" useGeneratedKeys="false">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select SEQ_T_PAYMENT_CHECK_ACCOUNT.nextVal from dual
    </selectKey>
    insert into LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="merchantNo != null">
        MERCHANT_NO,
      </if>
      <if test="settleDate != null">
        SETTLE_DATE,
      </if>
      <if test="payChannel != null">
        PAY_CHANNEL,
      </if>
      <if test="subjectNo != null">
        SUBJECT_NO,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="initiator != null">
        INITIATOR,
      </if>
      <if test="status != null">
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=NUMERIC},
      <if test="merchantNo != null">
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="settleDate != null">
        #{settleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="subjectNo != null">
        #{subjectNo,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="initiator != null">
        #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntityExample" resultType="java.lang.Integer">
    select count(*) from LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.merchantNo != null">
        MERCHANT_NO = #{record.merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.settleDate != null">
        SETTLE_DATE = #{record.settleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payChannel != null">
        PAY_CHANNEL = #{record.payChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectNo != null">
        SUBJECT_NO = #{record.subjectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.initiator != null">
        INITIATOR = #{record.initiator,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    set ID = #{record.id,jdbcType=NUMERIC},
    MERCHANT_NO = #{record.merchantNo,jdbcType=VARCHAR},
      SETTLE_DATE = #{record.settleDate,jdbcType=TIMESTAMP},
    PAY_CHANNEL = #{record.payChannel,jdbcType=VARCHAR},
      SUBJECT_NO = #{record.subjectNo,jdbcType=VARCHAR},
    MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      INITIATOR = #{record.initiator,jdbcType=VARCHAR},
    STATUS = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntity">
    update LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    <set>
      <if test="merchantNo != null">
        MERCHANT_NO = #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="settleDate != null">
        SETTLE_DATE = #{settleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payChannel != null">
        PAY_CHANNEL = #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="subjectNo != null">
        SUBJECT_NO = #{subjectNo,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="initiator != null">
        INITIATOR = #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanmao.data.sync.dao.entity.PaymentCheckAccountEntity">
    update LM_PAY.T_PAYMENT_CHECK_ACCOUNT
    set MERCHANT_NO = #{merchantNo,jdbcType=VARCHAR},
    SETTLE_DATE = #{settleDate,jdbcType=TIMESTAMP},
      PAY_CHANNEL = #{payChannel,jdbcType=VARCHAR},
    SUBJECT_NO = #{subjectNo,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
    INITIATOR = #{initiator,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=NUMERIC}
  </update>
</mapper>