<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmao.data.sync.dao.oracle.PaymentLogEntityMapper">
  <resultMap id="BaseResultMap" type="com.lanmao.data.sync.dao.entity.PaymentLogEntity">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="REQUEST_NO" jdbcType="VARCHAR" property="requestNo" />
    <result column="MERCHANT_REQ_NO" jdbcType="VARCHAR" property="merchantReqNo" />
    <result column="PAYMENT_ORDER_NO" jdbcType="VARCHAR" property="paymentOrderNo" />
    <result column="PAYMENT_ID" jdbcType="NUMERIC" property="paymentId" />
    <result column="ORDER_CREATE_TIME" jdbcType="TIMESTAMP" property="orderCreateTime" />
    <result column="PAY_COMPANY" jdbcType="VARCHAR" property="payCompany" />
    <result column="PAY_WAY" jdbcType="VARCHAR" property="payWay" />
    <result column="STAGE" jdbcType="VARCHAR" property="stage" />
    <result column="INITIATOR" jdbcType="VARCHAR" property="initiator" />
    <result column="RECEIVER" jdbcType="VARCHAR" property="receiver" />
    <result column="REQUEST_URL" jdbcType="VARCHAR" property="requestUrl" />
    <result column="START_TIME" jdbcType="TIMESTAMP" property="startTime" />
    <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
    <result column="SEND_CONTENT" jdbcType="VARCHAR" property="sendContent" />
    <result column="RETURN_MSG" jdbcType="VARCHAR" property="returnMsg" />
    <result column="ORDER_STATUS" jdbcType="VARCHAR" property="orderStatus" />
    <result column="TIMES" jdbcType="NUMERIC" property="times" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, REQUEST_NO, MERCHANT_REQ_NO, PAYMENT_ORDER_NO, PAYMENT_ID, ORDER_CREATE_TIME, 
    PAY_COMPANY, PAY_WAY, STAGE, INITIATOR, RECEIVER, REQUEST_URL, START_TIME, END_TIME,
    SEND_CONTENT, RETURN_MSG, ORDER_STATUS, TIMES, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LM_PAY.T_PAYMENT_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from LM_PAY.T_PAYMENT_LOG
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LM_PAY.T_PAYMENT_LOG
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntityExample">
    delete from LM_PAY.T_PAYMENT_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntity" useGeneratedKeys="false">
    insert into LM_PAY.T_PAYMENT_LOG (ID, REQUEST_NO, MERCHANT_REQ_NO,
      PAYMENT_ORDER_NO, PAYMENT_ID, ORDER_CREATE_TIME,
    PAY_COMPANY, PAY_WAY, STAGE, 
      INITIATOR, RECEIVER, REQUEST_URL,
    START_TIME, END_TIME, SEND_CONTENT, 
      RETURN_MSG, ORDER_STATUS, TIMES,
    CREATE_TIME)
    values (#{id,jdbcType=NUMERIC}, #{requestNo,jdbcType=VARCHAR}, #{merchantReqNo,jdbcType=VARCHAR},
    #{paymentOrderNo,jdbcType=VARCHAR}, #{paymentId,jdbcType=NUMERIC}, #{orderCreateTime,jdbcType=TIMESTAMP}, 
      #{payCompany,jdbcType=VARCHAR}, #{payWay,jdbcType=VARCHAR}, #{stage,jdbcType=VARCHAR},
    #{initiator,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, #{requestUrl,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{sendContent,jdbcType=VARCHAR},
    #{returnMsg,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, #{times,jdbcType=NUMERIC}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntity" useGeneratedKeys="false">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select SEQ_T_PAYMENT_LOG.nextVal from dual
    </selectKey>
    insert into LM_PAY.T_PAYMENT_LOG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="requestNo != null">
        REQUEST_NO,
      </if>
      <if test="merchantReqNo != null">
        MERCHANT_REQ_NO,
      </if>
      <if test="paymentOrderNo != null">
        PAYMENT_ORDER_NO,
      </if>
      <if test="paymentId != null">
        PAYMENT_ID,
      </if>
      <if test="orderCreateTime != null">
        ORDER_CREATE_TIME,
      </if>
      <if test="payCompany != null">
        PAY_COMPANY,
      </if>
      <if test="payWay != null">
        PAY_WAY,
      </if>
      <if test="stage != null">
        STAGE,
      </if>
      <if test="initiator != null">
        INITIATOR,
      </if>
      <if test="receiver != null">
        RECEIVER,
      </if>
      <if test="requestUrl != null">
        REQUEST_URL,
      </if>
      <if test="startTime != null">
        START_TIME,
      </if>
      <if test="endTime != null">
        END_TIME,
      </if>
      <if test="sendContent != null">
        SEND_CONTENT,
      </if>
      <if test="returnMsg != null">
        RETURN_MSG,
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS,
      </if>
      <if test="times != null">
        TIMES,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=NUMERIC},
      <if test="requestNo != null">
        #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantReqNo != null">
        #{merchantReqNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderNo != null">
        #{paymentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=NUMERIC},
      </if>
      <if test="orderCreateTime != null">
        #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payCompany != null">
        #{payCompany,jdbcType=VARCHAR},
      </if>
      <if test="payWay != null">
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="initiator != null">
        #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null">
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendContent != null">
        #{sendContent,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null">
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntityExample" resultType="java.lang.Integer">
    select count(*) from LM_PAY.T_PAYMENT_LOG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update LM_PAY.T_PAYMENT_LOG
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.requestNo != null">
        REQUEST_NO = #{record.requestNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantReqNo != null">
        MERCHANT_REQ_NO = #{record.merchantReqNo,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentOrderNo != null">
        PAYMENT_ORDER_NO = #{record.paymentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=NUMERIC},
      </if>
      <if test="record.orderCreateTime != null">
        ORDER_CREATE_TIME = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payCompany != null">
        PAY_COMPANY = #{record.payCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.payWay != null">
        PAY_WAY = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.stage != null">
        STAGE = #{record.stage,jdbcType=VARCHAR},
      </if>
      <if test="record.initiator != null">
        INITIATOR = #{record.initiator,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null">
        RECEIVER = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUrl != null">
        REQUEST_URL = #{record.requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendContent != null">
        SEND_CONTENT = #{record.sendContent,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMsg != null">
        RETURN_MSG = #{record.returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        ORDER_STATUS = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null">
        TIMES = #{record.times,jdbcType=NUMERIC},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update LM_PAY.T_PAYMENT_LOG
    set ID = #{record.id,jdbcType=NUMERIC},
    REQUEST_NO = #{record.requestNo,jdbcType=VARCHAR},
      MERCHANT_REQ_NO = #{record.merchantReqNo,jdbcType=VARCHAR},
    PAYMENT_ORDER_NO = #{record.paymentOrderNo,jdbcType=VARCHAR},
      PAYMENT_ID = #{record.paymentId,jdbcType=NUMERIC},
    ORDER_CREATE_TIME = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      PAY_COMPANY = #{record.payCompany,jdbcType=VARCHAR},
    PAY_WAY = #{record.payWay,jdbcType=VARCHAR},
      STAGE = #{record.stage,jdbcType=VARCHAR},
    INITIATOR = #{record.initiator,jdbcType=VARCHAR},
      RECEIVER = #{record.receiver,jdbcType=VARCHAR},
    REQUEST_URL = #{record.requestUrl,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
    END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      SEND_CONTENT = #{record.sendContent,jdbcType=VARCHAR},
    RETURN_MSG = #{record.returnMsg,jdbcType=VARCHAR},
      ORDER_STATUS = #{record.orderStatus,jdbcType=VARCHAR},
    TIMES = #{record.times,jdbcType=NUMERIC},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntity">
    update LM_PAY.T_PAYMENT_LOG
    <set>
      <if test="requestNo != null">
        REQUEST_NO = #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantReqNo != null">
        MERCHANT_REQ_NO = #{merchantReqNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentOrderNo != null">
        PAYMENT_ORDER_NO = #{paymentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null">
        PAYMENT_ID = #{paymentId,jdbcType=NUMERIC},
      </if>
      <if test="orderCreateTime != null">
        ORDER_CREATE_TIME = #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payCompany != null">
        PAY_COMPANY = #{payCompany,jdbcType=VARCHAR},
      </if>
      <if test="payWay != null">
        PAY_WAY = #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        STAGE = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="initiator != null">
        INITIATOR = #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        RECEIVER = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null">
        REQUEST_URL = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendContent != null">
        SEND_CONTENT = #{sendContent,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null">
        RETURN_MSG = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        TIMES = #{times,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanmao.data.sync.dao.entity.PaymentLogEntity">
    update LM_PAY.T_PAYMENT_LOG
    set REQUEST_NO = #{requestNo,jdbcType=VARCHAR},
    MERCHANT_REQ_NO = #{merchantReqNo,jdbcType=VARCHAR},
      PAYMENT_ORDER_NO = #{paymentOrderNo,jdbcType=VARCHAR},
    PAYMENT_ID = #{paymentId,jdbcType=NUMERIC},
    ORDER_CREATE_TIME = #{orderCreateTime,jdbcType=TIMESTAMP},
      PAY_COMPANY = #{payCompany,jdbcType=VARCHAR},
    PAY_WAY = #{payWay,jdbcType=VARCHAR},
      STAGE = #{stage,jdbcType=VARCHAR},
    INITIATOR = #{initiator,jdbcType=VARCHAR},
      RECEIVER = #{receiver,jdbcType=VARCHAR},
    REQUEST_URL = #{requestUrl,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
    END_TIME = #{endTime,jdbcType=TIMESTAMP},
      SEND_CONTENT = #{sendContent,jdbcType=VARCHAR},
    RETURN_MSG = #{returnMsg,jdbcType=VARCHAR},
      ORDER_STATUS = #{orderStatus,jdbcType=VARCHAR},
    TIMES = #{times,jdbcType=NUMERIC},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <delete id="deleteByTimeAndRow" parameterType="map">
    delete from LM_PAY.T_PAYMENT_LOG
    where id in (select id from LM_PAY.T_PAYMENT_LOG where ORDER_CREATE_TIME
    &lt;
    = #{createTime} 
     fetch first ${rowNum} rows only)
  </delete>
</mapper>