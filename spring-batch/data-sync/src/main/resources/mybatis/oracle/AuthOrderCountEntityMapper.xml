<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmao.data.sync.dao.oracle.AuthOrderCountEntityMapper">
  <resultMap id="BaseResultMap" type="com.lanmao.data.sync.dao.entity.AuthOrderCountEntity">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="COUNT_DATE" jdbcType="TIMESTAMP" property="countDate" />
    <result column="PLATFORM" jdbcType="VARCHAR" property="platform" />
    <result column="SUBJECT_NO" jdbcType="VARCHAR" property="subjectNo" />
    <result column="MERCHANT_NAME" jdbcType="VARCHAR" property="merchantName" />
    <result column="AUTH_CHANNEL" jdbcType="VARCHAR" property="authChannel" />
    <result column="BANK" jdbcType="VARCHAR" property="bank" />
    <result column="AUTH_MODE" jdbcType="VARCHAR" property="authMode" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="TOTAL_COUNT" jdbcType="NUMERIC" property="totalCount" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, COUNT_DATE, PLATFORM, SUBJECT_NO, MERCHANT_NAME, AUTH_CHANNEL, BANK, AUTH_MODE, 
    STATUS, TOTAL_COUNT, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LM_PAY.T_AUTH_ORDER_COUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from LM_PAY.T_AUTH_ORDER_COUNT
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LM_PAY.T_AUTH_ORDER_COUNT
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntityExample">
    delete from LM_PAY.T_AUTH_ORDER_COUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntity" useGeneratedKeys="false">
    insert into LM_PAY.T_AUTH_ORDER_COUNT (ID, COUNT_DATE, PLATFORM,
      SUBJECT_NO, MERCHANT_NAME, AUTH_CHANNEL,
    BANK, AUTH_MODE, STATUS, 
      TOTAL_COUNT, CREATE_TIME)
    values (#{id,jdbcType=NUMERIC}, #{countDate,jdbcType=TIMESTAMP}, #{platform,jdbcType=VARCHAR}, 
      #{subjectNo,jdbcType=VARCHAR}, #{merchantName,jdbcType=VARCHAR}, #{authChannel,jdbcType=VARCHAR},
    #{bank,jdbcType=VARCHAR}, #{authMode,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{totalCount,jdbcType=NUMERIC}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntity" useGeneratedKeys="false">
    insert into LM_PAY.T_AUTH_ORDER_COUNT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="countDate != null">
        COUNT_DATE,
      </if>
      <if test="platform != null">
        PLATFORM,
      </if>
      <if test="subjectNo != null">
        SUBJECT_NO,
      </if>
      <if test="merchantName != null">
        MERCHANT_NAME,
      </if>
      <if test="authChannel != null">
        AUTH_CHANNEL,
      </if>
      <if test="bank != null">
        BANK,
      </if>
      <if test="authMode != null">
        AUTH_MODE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="totalCount != null">
        TOTAL_COUNT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=NUMERIC},
      <if test="countDate != null">
        #{countDate,jdbcType=TIMESTAMP},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="subjectNo != null">
        #{subjectNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantName != null">
        #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="authChannel != null">
        #{authChannel,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="authMode != null">
        #{authMode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntityExample" resultType="java.lang.Integer">
    select count(*) from LM_PAY.T_AUTH_ORDER_COUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update LM_PAY.T_AUTH_ORDER_COUNT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.countDate != null">
        COUNT_DATE = #{record.countDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.platform != null">
        PLATFORM = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectNo != null">
        SUBJECT_NO = #{record.subjectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantName != null">
        MERCHANT_NAME = #{record.merchantName,jdbcType=VARCHAR},
      </if>
      <if test="record.authChannel != null">
        AUTH_CHANNEL = #{record.authChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null">
        BANK = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.authMode != null">
        AUTH_MODE = #{record.authMode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.totalCount != null">
        TOTAL_COUNT = #{record.totalCount,jdbcType=NUMERIC},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update LM_PAY.T_AUTH_ORDER_COUNT
    set ID = #{record.id,jdbcType=NUMERIC},
    COUNT_DATE = #{record.countDate,jdbcType=TIMESTAMP},
      PLATFORM = #{record.platform,jdbcType=VARCHAR},
    SUBJECT_NO = #{record.subjectNo,jdbcType=VARCHAR},
      MERCHANT_NAME = #{record.merchantName,jdbcType=VARCHAR},
    AUTH_CHANNEL = #{record.authChannel,jdbcType=VARCHAR},
      BANK = #{record.bank,jdbcType=VARCHAR},
    AUTH_MODE = #{record.authMode,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
    TOTAL_COUNT = #{record.totalCount,jdbcType=NUMERIC},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntity">
    update LM_PAY.T_AUTH_ORDER_COUNT
    <set>
      <if test="countDate != null">
        COUNT_DATE = #{countDate,jdbcType=TIMESTAMP},
      </if>
      <if test="platform != null">
        PLATFORM = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="subjectNo != null">
        SUBJECT_NO = #{subjectNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantName != null">
        MERCHANT_NAME = #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="authChannel != null">
        AUTH_CHANNEL = #{authChannel,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        BANK = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="authMode != null">
        AUTH_MODE = #{authMode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        TOTAL_COUNT = #{totalCount,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntity">
    update LM_PAY.T_AUTH_ORDER_COUNT
    set COUNT_DATE = #{countDate,jdbcType=TIMESTAMP},
    PLATFORM = #{platform,jdbcType=VARCHAR},
      SUBJECT_NO = #{subjectNo,jdbcType=VARCHAR},
    MERCHANT_NAME = #{merchantName,jdbcType=VARCHAR},
      AUTH_CHANNEL = #{authChannel,jdbcType=VARCHAR},
    BANK = #{bank,jdbcType=VARCHAR},
      AUTH_MODE = #{authMode,jdbcType=VARCHAR},
    STATUS = #{status,jdbcType=VARCHAR},
      TOTAL_COUNT = #{totalCount,jdbcType=NUMERIC},
    CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <insert id="batchInsert" parameterType="com.lanmao.data.sync.dao.entity.AuthOrderCountEntity">
    insert into LM_PAY.T_AUTH_ORDER_COUNT (COUNT_DATE, PLATFORM, SUBJECT_NO,
		MERCHANT_NAME, AUTH_CHANNEL, BANK, AUTH_MODE, STATUS, TOTAL_COUNT, CREATE_TIME)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.countDate}, #{item.platform}, #{item.subjectNo},
			#{item.merchantName}, #{item.authChannel}, #{item.bank},
      #{item.authMode}, #{item.status}, #{item.totalCount}, #{item.createTime})
    </foreach>
  </insert>
</mapper>