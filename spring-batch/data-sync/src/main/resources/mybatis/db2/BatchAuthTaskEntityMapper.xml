<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmao.data.sync.dao.db2.BatchAuthTaskEntityMapper">
  <resultMap id="BaseResultMap" type="com.lanmao.data.sync.dao.entity.BatchAuthTaskEntity">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="BATCH_TASK_NAME" jdbcType="VARCHAR" property="batchTaskName" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="BATCH_AUTH_MODE" jdbcType="VARCHAR" property="batchAuthMode" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, BATCH_TASK_NAME, STATUS, CREATE_TIME, UPDATE_TIME, BATCH_AUTH_MODE, REMARK
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LM_PAY.T_BATCH_AUTH_TASK
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LM_PAY.T_BATCH_AUTH_TASK
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lanmao.data.sync.dao.entity.BatchAuthTaskEntity">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select * from dual
    </selectKey>
    insert into LM_PAY.T_BATCH_AUTH_TASK (ID, BATCH_TASK_NAME, STATUS, 
      CREATE_TIME, UPDATE_TIME, BATCH_AUTH_MODE, 
      REMARK)
    values (#{id,jdbcType=BIGINT}, #{batchTaskName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{batchAuthMode,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lanmao.data.sync.dao.entity.BatchAuthTaskEntity">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select * from dual
    </selectKey>
    insert into LM_PAY.T_BATCH_AUTH_TASK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="batchTaskName != null">
        BATCH_TASK_NAME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="batchAuthMode != null">
        BATCH_AUTH_MODE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="batchTaskName != null">
        #{batchTaskName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batchAuthMode != null">
        #{batchAuthMode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanmao.data.sync.dao.entity.BatchAuthTaskEntity">
    update LM_PAY.T_BATCH_AUTH_TASK
    <set>
      <if test="batchTaskName != null">
        BATCH_TASK_NAME = #{batchTaskName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batchAuthMode != null">
        BATCH_AUTH_MODE = #{batchAuthMode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanmao.data.sync.dao.entity.BatchAuthTaskEntity">
    update LM_PAY.T_BATCH_AUTH_TASK
    set BATCH_TASK_NAME = #{batchTaskName,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      BATCH_AUTH_MODE = #{batchAuthMode,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>



  <select id="queryList" resultMap="BaseResultMap" parameterType="com.lanmao.data.sync.client.param.PageQueryParam">
    select * from (
    <if test="startId != null">
      select <include refid="Base_Column_List"/>, ROW_NUMBER() OVER(order by ID) AS NUM from LM_PAY.${tableName}
      where
      ID &gt;= #{startId,jdbcType=BIGINT}
      and
      ID &lt; #{endId,jdbcType=BIGINT}
    </if>

    <if test="startId == null">
      select <include refid="Base_Column_List"/>, ROW_NUMBER() OVER(order by CREATE_TIME) AS NUM from LM_PAY.${tableName}
      where
      CREATE_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
      and
      CREATE_TIME &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
    ) temp
    where num &gt; #{start,jdbcType=BIGINT}
    and num &lt;= #{end,jdbcType=BIGINT}
  </select>

</mapper>