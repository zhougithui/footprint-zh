<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanmao.data.sync.dao.db2.IdAuthPoolEntityMapper">
  <resultMap id="BaseResultMap" type="com.lanmao.data.sync.dao.entity.IdAuthPoolEntity">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="AUTH_CHANNEL" jdbcType="VARCHAR" property="authChannel" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="CRED_NUM" jdbcType="VARCHAR" property="credNum" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, AUTH_CHANNEL, NAME, CRED_NUM, STATUS, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LM_PAY.T_ID_AUTH_POOL
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from LM_PAY.T_ID_AUTH_POOL
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lanmao.data.sync.dao.entity.IdAuthPoolEntity">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select * from dual
    </selectKey>
    insert into LM_PAY.T_ID_AUTH_POOL (ID, AUTH_CHANNEL, NAME, 
      CRED_NUM, STATUS, CREATE_TIME
      )
    values (#{id,jdbcType=BIGINT}, #{authChannel,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{credNum,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lanmao.data.sync.dao.entity.IdAuthPoolEntity">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select * from dual
    </selectKey>
    insert into LM_PAY.T_ID_AUTH_POOL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="authChannel != null">
        AUTH_CHANNEL,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="credNum != null">
        CRED_NUM,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="authChannel != null">
        #{authChannel,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="credNum != null">
        #{credNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanmao.data.sync.dao.entity.IdAuthPoolEntity">
    update LM_PAY.T_ID_AUTH_POOL
    <set>
      <if test="authChannel != null">
        AUTH_CHANNEL = #{authChannel,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="credNum != null">
        CRED_NUM = #{credNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanmao.data.sync.dao.entity.IdAuthPoolEntity">
    update LM_PAY.T_ID_AUTH_POOL
    set AUTH_CHANNEL = #{authChannel,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      CRED_NUM = #{credNum,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>


  <select id="queryList" resultMap="BaseResultMap" parameterType="com.lanmao.data.sync.client.param.PageQueryParam">
    select * from (
    select <include refid="Base_Column_List"/>, ROW_NUMBER() OVER(order by CREATE_TIME) AS NUM from LM_PAY.${tableName}
    where
    CREATE_TIME &gt;= #{startTime,jdbcType=TIMESTAMP}
    and
    CREATE_TIME &lt; #{endTime,jdbcType=TIMESTAMP}
    ) temp
    where num &gt; #{start,jdbcType=BIGINT}
    and num &lt;= #{end,jdbcType=BIGINT}
  </select>

</mapper>