<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

    <bean id="dataSourceDB2" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${datasource.db2.driverClassName}"/>
        <property name="jdbcUrl">
            <value>${datasource.db2.url}</value>
        </property>
        <property name="user">
            <value>${datasource.db2.username}</value>
        </property>
        <property name="password">
            <value>${datasource.db2.password}</value>
        </property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement">
            <value>${c3p0.acquireIncrement}</value>
        </property>
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize">
            <value>${c3p0.initialPoolSize}</value>
        </property>
        <property name="minPoolSize">
            <value>${c3p0.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${c3p0.maxPoolSize}</value>
        </property>
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime">
            <value>${c3p0.maxIdleTime}</value>
        </property>
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod">
            <value>${c3p0.idleConnectionTestPeriod}</value>
        </property>
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
                            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
                            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <property name="maxStatements">
            <value>${c3p0.maxStatements}</value>
        </property>
        <!-- c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 通过
                                  多线程实现多个操作同时被执行。Default: 3-->
        <property name="numHelperThreads">
            <value>${c3p0.numHelperThreads}</value>
        </property>
    </bean>
    <bean id="transactionManagerDB2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceDB2"/>
        <property name="defaultTimeout" value="10"/>
    </bean>

    <bean id="jdbcTemplateDB2" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSourceDB2"/>
    </bean>

    <bean id="transactionTemplateDB2" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManagerDB2"/>
    </bean>

    <bean id="sqlSessionFactoryDB2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceDB2"/>
        <property name="configLocation" value="classpath:mybatis/mybatis.xml"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:mybatis/db2/*Mapper.xml</value>
                <value>classpath:mybatis/mapper/*Mapper.xml</value>
            </array>
        </property>
    </bean>

    <!-- 配置扫描器 -->
    <bean id="beanNameGeneratorDB2" class="com.lanmao.data.MapperBeanNameGenerator">
        <property name="suffix" value="DB2"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="nameGenerator" ref="beanNameGeneratorDB2"/>
        <property name="basePackage" value="com.lanmao.data.sync.dao.db2" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryDB2" />
    </bean>

    <bean id="sqlSessionTemplateDB2" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg>
            <ref bean="sqlSessionFactoryDB2"/>
        </constructor-arg>
    </bean>


</beans>