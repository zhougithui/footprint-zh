<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringFacetInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:app.properties"/>
    <context:annotation-config />
    <context:component-scan base-package="com.zmy.redis"/>

    <!--
        redis哨兵配置
    -->
    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="${redisMasterName}"></property>
            </bean>
        </property>
        <property name="sentinels">
            <bean class="com.zmy.redis.SentinelInitializer">
                <constructor-arg name="redisSentinels" value="${redisSentinels}"/>
            </bean>
        </property>
        <property name="database" value="${redisDatabase}"/>
        <property name="password">
            <bean class="org.springframework.data.redis.connection.RedisPassword">
                <constructor-arg name="thePassword" value="${redisPassword}"/>
            </bean>
        </property>
    </bean>

    <!-- jedis pool配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.maxActive}" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="clientConfig" class="org.springframework.data.redis.connection.jedis.DefaultJedisClientConfiguration">
        <constructor-arg name="useSsl" value="false"/>
        <constructor-arg name="hostnameVerifier">
            <null></null>
        </constructor-arg>
        <constructor-arg name="sslParameters">
            <null></null>
        </constructor-arg>
        <constructor-arg name="sslSocketFactory">
            <null></null>
        </constructor-arg>
        <constructor-arg name="usePooling" value="true"/>
        <constructor-arg name="poolConfig" ref="poolConfig"/>
        <constructor-arg name="clientName" value="zmy"/>
        <constructor-arg name="connectTimeout" value="ZERO"/>
        <constructor-arg name="readTimeout" value="ZERO"/>
    </bean>

    <bean id="jeidsConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
        <constructor-arg name="clientConfig" ref="clientConfig"/>
        <!--<property name="password" value="${redisPassword}" />
        <property name="database" value="${redisDatabase}"/>
        <property name="usePool" value="true"/>
        <property name="timeout" value="${redis.timeout}"/>-->
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jeidsConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="defaultSerializer">
            <bean class="com.zmy.redis.serializer.GsonSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean>
</beans>